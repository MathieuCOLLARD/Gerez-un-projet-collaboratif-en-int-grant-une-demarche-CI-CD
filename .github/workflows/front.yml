# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Frontend CI - Test & SonarQube Analysis

on:
  push:
    branches: [ "develop", "main" ]
    paths:
      - 'front/**'
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ "main" ]
    paths:
      - 'front/**'
jobs:
  tests-front:

    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v4
    
    - name: setup node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16
        
    - name: install dependencies
      working-directory: front
      run: npm ci
      
    - name: Install Angular CLI
      working-directory: front
      run: npm install @angular/cli@14.1.0

    - name: Build the project
      working-directory: front
      run: npx ng build
      
    - name: run tests
      working-directory: front
      run: npx ng test --watch=false --browsers=ChromeHeadless
      
    - name: upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: front/coverage

  sonarcloud:
    name: SonarCloud
    needs: tests-front
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: front
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  docker:
    name: Docker
    needs: sonarcloud
    runs-on: ubuntu-latest
    steps:
       - name: Log in to Docker Hub
         uses: docker/login-action@v2
         with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

       - name: Build Docker image
         run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-image:latest ./front

       - name: Push Docker image
         run: docker push ${{ secrets.DOCKER_USERNAME }}/my-image:latest
